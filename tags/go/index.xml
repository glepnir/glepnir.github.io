<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on glepnir blog</title><link>/tags/go/</link><description>Recent content in go on glepnir blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 06 Sep 2022 16:44:04 +0800</lastBuildDate><atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Graceful Shutdown</title><link>/post/go/graceful-shutdown/</link><pubDate>Tue, 06 Sep 2022 16:44:04 +0800</pubDate><guid>/post/go/graceful-shutdown/</guid><description>&lt;p>使用gin框架构建一个简单的web服务。当然使用标准库构建也是可以，不过正好在写gin的教程顺便
就拿来用一下。&lt;/p></description></item><item><title>Go Decorator Json</title><link>/post/go/go-decorator-json/</link><pubDate>Tue, 06 Sep 2022 16:40:33 +0800</pubDate><guid>/post/go/go-decorator-json/</guid><description>&lt;p>日常开发处理业务的时候这一步是必不可少的,判断处理各种情况然后返回给前端，有时候需要写不少重复的代码
例如这样的。&lt;/p></description></item><item><title>Go Context Package Usage</title><link>/post/go/context-usage/</link><pubDate>Tue, 06 Sep 2022 16:38:23 +0800</pubDate><guid>/post/go/context-usage/</guid><description>&lt;p>Let’s start with the main function that will really only create the router and the routes.&lt;/p></description></item></channel></rss>