<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on glepnir</title><link>https://blog.neovim.pro/tags/go/</link><description>Recent content in go on glepnir</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright © 2022 author glepnir</copyright><lastBuildDate>Tue, 06 Sep 2022 16:44:04 +0800</lastBuildDate><atom:link href="https://blog.neovim.pro/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Graceful Shutdown</title><link>https://blog.neovim.pro/posts/go/graceful-shutdown/</link><pubDate>Tue, 06 Sep 2022 16:44:04 +0800</pubDate><guid>https://blog.neovim.pro/posts/go/graceful-shutdown/</guid><description>&lt;h2 id="一个简单的-http-服务">一个简单的 Http 服务&lt;/h2>
&lt;p>使用gin框架构建一个简单的web服务。当然使用标准库构建也是可以，不过正好在写gin的教程顺便
就拿来用一下。&lt;/p></description></item><item><title>Go Decorator Json</title><link>https://blog.neovim.pro/posts/go/go-decorator-json/</link><pubDate>Tue, 06 Sep 2022 16:40:33 +0800</pubDate><guid>https://blog.neovim.pro/posts/go/go-decorator-json/</guid><description>&lt;h2 id="常见的处理http-json的响应输出">常见的处理Http Json的响应输出&lt;/h2>
&lt;p>日常开发处理业务的时候这一步是必不可少的,判断处理各种情况然后返回给前端，有时候需要写不少重复的代码
例如这样的。&lt;/p></description></item><item><title>Go Context Package Usage</title><link>https://blog.neovim.pro/posts/go/context-usage/</link><pubDate>Tue, 06 Sep 2022 16:38:23 +0800</pubDate><guid>https://blog.neovim.pro/posts/go/context-usage/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>For the longest time I have wanted to see an easy to understand example (read newbie) of how to add data to the “new” golang 1.7 request context object. Since I wasted more than 2 days looking for something like that and never really found anything I decided to figure it out from the docs and write something up for others like me that wanted something simple. The example below is trivial and does not put anything useful in the context it’s just there to get your own juices flowing.&lt;/p></description></item></channel></rss>